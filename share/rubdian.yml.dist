#
# rubdian configuration file
#
rubdian:

    #
    # We need some text here
    #
    #
    commands:
        # this command will be used to gather all
        # informations about updates. you should not
        # remove the whole line. instead, you can modify
        # it to fit your needs but ensure to run apt-get upgrade -s
        # as rubdian is parsing its output and won't work without it.
        # this might be changed in the future.
        collect: sudo apt-get autoclean -y && sudo apt-get update -qq && sudo apt-get upgrade -s

        # this command will be used to actually run the upgrade.
        upgrade: sudo bash -c "export DEBIAN_FRONTEND=noninteractive && export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin && sudo apt-get upgrade -y"


    #
    # Database settings
    #
    # rubdian is using sequel for its database connection.
    # this means, rubdian supports all kind of databases
    # supported by sequel.
    #
    # Please see http://sequel.rubyforge.org/
    # for a list of supported adapters.
    #
    # rubdian is using sqlite3 as its default database.
    # if you run this only on your local machine, you don't
    # have to change these settings. this should only be done
    # in a multisystem environment or if you have your own reasons.
    #
    # sqlite url: sqlite:///path/to/db
    # mysql: mysql://username:password@host/db
    # ...
    database:
        uri:

    #
    # Distexec settings
    #
    # rubdian is using distexec for its remote execution.
    # this means, you can use every backend distexec supports
    # to retrieve your nodes. you can also change the way
    # rubdian actually executes its commands by changing
    # the distexec executor. this is only for advanced
    # usage and no case where it's been changed is known by now.
    #
    # rubdian is using distexec's filebased backend that
    # supports newline separated text files in the following
    # format:
    #
    # hostname
    # hostname:port
    #
    # see the distexec documentation for more details.
    #
    distexec:
        backend:
            driver: Cpx::Distexec::Backend::FileBackend
            require: "cpx/distexec/backend/filebackend"
        executor:
            driver: Cpx::Distexec::Executor::SSH
            require: "cpx/distexec/executor/ssh"

